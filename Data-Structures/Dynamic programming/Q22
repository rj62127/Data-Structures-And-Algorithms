#include <bits/stdc++.h>
using namespace std;


class Solution {
public:
    vector<string> generateParenthesis(int n) {
        
         vector<string> res;
        string curr = "";
        generateParenthesisHelper(n, 0, 0, curr, res);
        return res;
    }
    
    void generateParenthesisHelper(int n, int open, int close, string& curr, vector<string>& res) {
        if (open == n && close == n) {
            res.push_back(curr);
            return;
        }
        
        if (open < n) {
            curr.push_back('(');
            generateParenthesisHelper(n, open + 1, close, curr, res);
            curr.pop_back();
        }
        
        if (close < open) {
            curr.push_back(')');
            generateParenthesisHelper(n, open, close + 1, curr, res);
            curr.pop_back();
        }

    }
};