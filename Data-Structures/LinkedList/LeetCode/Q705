#include <bits/stdc++.h>
using namespace std;

class MyHashSet {
public:
//vector<int> m;
vector<list<int>> m;
int size;
    MyHashSet() {
        //size = 1e6+1;
        size = 100;
        m.resize(size);
        
        
    }
// Hash function
    int hash(int key) {
        return key%size;
    }
    

    list<int> :: iterator search(int key) {
        int i = hash(key); // store index 
        return find(m[i].begin(), m[i].end(), key);
    }
    
    void add(int key) {
        //m[key] = 1;
        if(contains(key)) return;
        int i = hash(key);
        m[i].push_back(key);

        
    }
    
    void remove(int key) {
        //m[key] = 0;
        if(!contains(key)) return;
        int i = hash(key);
        m[i].erase(search(key));


        
    }
    
    bool contains(int key) {
        //return m[key];
        int i = hash(key);
        if(search(key) != m[i].end()) return true;
        else return false;
        
    }
};

// Comment Part is for Constraints 0 <= key <= 106
