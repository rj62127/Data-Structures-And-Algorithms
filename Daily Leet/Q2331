// QS:- Evaluate Boolean Binary Tree
// QS link :- https://leetcode.com/problems/evaluate-boolean-binary-tree/description/?envType=daily-question&envId=2024-05-16


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool evaluateTree(TreeNode* root) {
        if (root == nullptr) // Base case: if the node is null, return false.
            return false;

        if (root->left == nullptr && root->right == nullptr) // If it's a leaf node, return its value.
            return root->val;

        bool leftVal = evaluateTree(root->left); // Evaluate left subtree.
        bool rightVal = evaluateTree(root->right); // Evaluate right subtree.

        // Apply boolean operation based on the current node's value.
        if (root->val == 2) // OR operation
            return leftVal || rightVal;
        else // AND operation (root->val == 3)
            return leftVal && rightVal;
    }
};